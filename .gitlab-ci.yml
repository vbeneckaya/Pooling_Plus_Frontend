stages:
  - build
  - deploy

before_script:
  - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
  - eval $(ssh-agent -s)
  - echo "$DEPLOY_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -t rsa 10.10.5.10 >> ~/.ssh/known_hosts
  - ssh-keyscan -t rsa 10.10.5.15 >> ~/.ssh/known_hosts
  - ssh-keyscan -t rsa bdf.tms.artlogics.ru >> ~/.ssh/known_hosts

### TEST1
build-frontend-test1:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:test1 -f ./docker/front/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:test1
  when: manual

build-tasks-test1:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:test1 -f ./docker/tasks/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:test1
  when: manual

build-backend-test1:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:test1 -f ./docker/back/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:test1
  when: manual

### TEST2
build-frontend-test2:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:test2 -f ./docker/front/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:test2
  when: manual

build-tasks-test2:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:test2 -f ./docker/tasks/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:test2
  when: manual

build-backend-test2:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:test2 -f ./docker/back/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:test2
  when: manual
  
### DEMO
build-frontend-demo:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:demo -f ./docker/front/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:demo
  only:
   - demo

build-tasks-demo:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:demo -f ./docker/tasks/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:demo
  only:
   - demo

build-backend-demo:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:demo -f ./docker/back/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:demo
  only:
   - demo

### DEV  
build-frontend-dev:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:develop -f ./docker/front/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:develop
  only:
   - develop
   
build-tasks-dev:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:develop -f ./docker/tasks/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:develop
  only:
   - develop   

build-frontend-prod:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:prod -f ./docker/front/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:prod
  only:
   - master 
  
### PROD  
build-tasks-prod:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:prod -f ./docker/tasks/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:prod
  only:
   - master   
   
build-backend-dev:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:develop -f ./docker/back/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:develop
  only:
   - develop    
   
build-backend-prod:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:prod -f ./docker/back/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:prod
  only:
   - master   
  
deploy-frontend-dev:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.10
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:develop; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-front
  only:
   - develop
  when: manual    
 # environment:
 #   name: 
 
deploy-backend-dev:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.10
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:develop; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-back
  only:
   - develop
  when: manual    
 # environment:
 #   name: 
 
deploy-tasks-dev:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.10
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:develop; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-tasks
  only:
   - develop
  when: manual   
  
deploy-frontend-demo:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.15
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:demo; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-front'
  only:
   - demo
  when: manual    
 
deploy-backend-demo:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.15
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:demo; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-back'
  only:
   - demo
  when: manual    
 
deploy-tasks-demo:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.15
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:demo; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-tasks'
  only:
   - demo
  when: manual     
  
deploy-backend-prod:
  variables:
    SSH_USER:  root
    SSH_HOST:  bdf.tms.artlogics.ru
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:prod; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-back'
  only:
   - master
  when: manual    

deploy-frontend-prod:
  variables:
    SSH_USER:  root
    SSH_HOST:  bdf.tms.artlogics.ru
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:prod; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-front'
  only:
   - master
  when: manual 
  
deploy-tasks-prod:
  variables:
    SSH_USER:  root
    SSH_HOST:  bdf.tms.artlogics.ru
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:prod; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-tasks'
  only:
   - master
  when: manual  
  
### TEST1
deploy-frontend-test1:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.15
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:demo; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-front'
  when: manual    
 
deploy-backend-test1:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.15
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:demo; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-back'
  when: manual    
 
deploy-tasks-test1:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.15
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:demo; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-tasks'
  when: manual

### TEST2
deploy-frontend-test2:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.15
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:demo; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-front'
  when: manual    
 
deploy-backend-test2:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.15
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:demo; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-back'
  when: manual    
 
deploy-tasks-test2:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.15
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'cd /opt/alternative-tms ; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:demo; docker-compose -f docker-compose.yml up -d --force-recreate alternative-tms-tasks'
  when: manual
  
