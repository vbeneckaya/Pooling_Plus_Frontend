stages:
  - build
  - deploy

before_script:
  - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
  - eval $(ssh-agent -s)
  - echo "$DEPLOY_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -t rsa 10.10.5.3 >> ~/.ssh/known_hosts
  - ssh-keyscan -t rsa 10.10.5.4 >> ~/.ssh/known_hosts
  - ssh-keyscan -t rsa 10.10.5.10 >> ~/.ssh/known_hosts
  - ssh-keyscan -t rsa 10.10.5.15 >> ~/.ssh/known_hosts
  - ssh-keyscan -t rsa 10.10.5.14 >> ~/.ssh/known_hosts
  - ssh-keyscan -t rsa bdf.tms.artlogics.ru >> ~/.ssh/known_hosts

### common build
build:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID -f ./docker/front/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID -f ./docker/tasks/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID -f ./docker/back/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID
  when: manual

### PROD  
build-tasks-prod:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:prod -f ./docker/tasks/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:prod
  only:
   - beiersdorf/master   
   
build-backend-prod:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:prod -f ./docker/back/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:prod
  only:
   - beiersdorf/master    
   
build-backend-prod:
  stage: build
  script:
    - docker login -u $LOGIN_REGISTRY -p $PASS_REGISTRY $REGISTRY_HOST || true
    - docker build -t fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:prod -f ./docker/back/Dockerfile .
    - docker push fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:prod
  only:
   - beiersdorf/master   
  
#DEPLOY-DEV

dev:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.10
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE "docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID; cd /opt/alternative-tms ; docker-compose -f docker-compose-current.yml down ; sed \"s/tag_of_image/$CI_PIPELINE_ID/g\" docker-compose-template.yml > docker-compose-current.yml ; docker-compose -f docker-compose-current.yml up -d --force-recreate"
  when: manual
  
dev-with-drop-db:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.10
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE "docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID; cd /opt/alternative-tms ; docker-compose -f docker-compose-current.yml down ; sudo rm -Rf ./postgres_old ; sudo mv ./postgres ./postgres_old ; sed \"s/tag_of_image/$CI_PIPELINE_ID/g\" docker-compose-template.yml > docker-compose-current.yml ; docker-compose -f docker-compose-current.yml up -d --force-recreate"
  when: manual


#DEPLOY-DEMO
demo:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.15
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE "docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID; cd /opt/alternative-tms ; docker-compose -f docker-compose-current.yml down ; sed \"s/tag_of_image/$CI_PIPELINE_ID/g\" docker-compose-template.yml > docker-compose-current.yml ; docker-compose -f docker-compose-current.yml up -d --force-recreate"
  when: manual

demo-with-drop-db:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.15
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE "docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID; cd /opt/alternative-tms ; docker-compose -f docker-compose-current.yml down ; sudo rm -Rf ./postgres_old ; sudo mv ./postgres ./postgres_old ; sed \"s/tag_of_image/$CI_PIPELINE_ID/g\" docker-compose-template.yml > docker-compose-current.yml ; docker-compose -f docker-compose-current.yml up -d --force-recreate"
  when: manual     

#DEPLOY-PROD
deploy-all-prod:
  variables:
    SSH_USER:  root
    SSH_HOST:  bdf.tms.artlogics.ru
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE 'docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:prod; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:prod; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:prod; cd /opt/alternative-tms ; docker-compose down && docker-compose up -d --force-recreate'
  only:
   - beiersdorf/master
  when: manual
  
#DEPLOY-TEST1

test1-with-drop-db:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.14
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE "docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID; cd /opt/alternative-tms ; docker-compose -f docker-compose-current.yml down ; sudo rm -Rf ./postgres_old ; sudo mv ./postgres ./postgres_old ; sed \"s/tag_of_image/$CI_PIPELINE_ID/g\" docker-compose-template.yml > docker-compose-current.yml ; docker-compose -f docker-compose-current.yml up -d --force-recreate"
  when: manual

test1:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.14
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE "docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID; cd /opt/alternative-tms ; docker-compose -f docker-compose-current.yml down ; sed \"s/tag_of_image/$CI_PIPELINE_ID/g\" docker-compose-template.yml > docker-compose-current.yml ; docker-compose -f docker-compose-current.yml up -d --force-recreate"
  when: manual

#DEPLOY-TEST2

test2-with-drop-db:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.4
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE "docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID; cd /opt/alternative-tms ; docker-compose -f docker-compose-current.yml down ; sudo rm -Rf ./postgres_old ; sudo mv ./postgres ./postgres_old ; sed \"s/tag_of_image/$CI_PIPELINE_ID/g\" docker-compose-template.yml > docker-compose-current.yml ; docker-compose -f docker-compose-current.yml up -d --force-recreate"
  when: manual

test2:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.4
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE "docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID; cd /opt/alternative-tms ; docker-compose -f docker-compose-current.yml down ; sed \"s/tag_of_image/$CI_PIPELINE_ID/g\" docker-compose-template.yml > docker-compose-current.yml ; docker-compose -f docker-compose-current.yml up -d --force-recreate"
  when: manual
  
#DEPLOY-DEMOPLUS

demoplus-with-drop-db:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.3
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE "docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID; cd /opt/alternative-tms ; docker-compose -f docker-compose-current.yml down ; sudo rm -Rf ./postgres_old ; sudo mv ./postgres ./postgres_old ; sed \"s/tag_of_image/$CI_PIPELINE_ID/g\" docker-compose-template.yml > docker-compose-current.yml ; docker-compose -f docker-compose-current.yml up -d --force-recreate"
  when: manual

demoplus:
  variables:
    SSH_USER:  server
    SSH_HOST:  10.10.5.3
    SSH_OPT:   -o StrictHostKeyChecking=no
    SSH_LINE: ssh $SSH_OPT $SSH_USER@$SSH_HOST
  stage: deploy
  script:
    - $SSH_LINE "docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-back:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-tasks:$CI_PIPELINE_ID; docker pull fmcpreg.azurecr.io/alternative-tms/alternative-tms-front:$CI_PIPELINE_ID; cd /opt/alternative-tms ; docker-compose -f docker-compose-current.yml down ; sed \"s/tag_of_image/$CI_PIPELINE_ID/g\" docker-compose-template.yml > docker-compose-current.yml ; docker-compose -f docker-compose-current.yml up -d --force-recreate"
  when: manual
